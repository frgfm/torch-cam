name: python-package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  pkg-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install -e . --upgrade

  pkg-test:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e . --upgrade
          pip install -r .github/workflows/requirements.txt

      - name: Run unittests
        run: |
          coverage run -m pytest test/
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

  flake8-py3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Run flake8
        run: |
          pip install flake8
          flake8 --version
          flake8 ./

  mypy-py3:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e . --upgrade
          pip install mypy
      - name: Run mypy
        run: |
          mypy --version
          mypy --config-file mypy.ini

  docs-build:
    runs-on: ubuntu-latest
    needs: pkg-install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
          architecture: x64
      - name: Cache python modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-${{ hashFiles('**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pkg-deps-${{ hashFiles('requirements.txt') }}-
            ${{ runner.os }}-pkg-deps-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e . --upgrade
          pip install -r docs/requirements.txt

      - name: Build documentation
        run: |
          sphinx-build docs/source docs/build -a
